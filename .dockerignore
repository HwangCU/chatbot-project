# flyctl launch added from back\.gitignore
back\**\.env


# Created by https://www.toptal.com/developers/gitignore/api/node
# Edit at https://www.toptal.com/developers/gitignore?templates=node

### Node ###
# Logs
back\**\logs
back\**\*.log
back\**\npm-debug.log*
back\**\yarn-debug.log*
back\**\yarn-error.log*
back\**\lerna-debug.log*
back\**\.pnpm-debug.log*

# Diagnostic reports (https://nodejs.org/api/report.html)
back\**\report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# Runtime data
back\**\pids
back\**\*.pid
back\**\*.seed
back\**\*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
back\**\lib-cov

# Coverage directory used by tools like istanbul
back\**\coverage
back\**\*.lcov

# nyc test coverage
back\**\.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
back\**\.grunt

# Bower dependency directory (https://bower.io/)
back\**\bower_components

# node-waf configuration
back\**\.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
back\**\build\Release

# Dependency directories
back\**\node_modules
back\**\jspm_packages

# Snowpack dependency directory (https://snowpack.dev/)
back\**\web_modules

# TypeScript cache
back\**\*.tsbuildinfo

# Optional npm cache directory
back\**\.npm

# Optional eslint cache
back\**\.eslintcache

# Optional stylelint cache
back\**\.stylelintcache

# Microbundle cache
back\**\.rpt2_cache
back\**\.rts2_cache_cjs
back\**\.rts2_cache_es
back\**\.rts2_cache_umd

# Optional REPL history
back\**\.node_repl_history

# Output of 'npm pack'
back\**\*.tgz

# Yarn Integrity file
back\**\.yarn-integrity

# dotenv environment variable files
back\**\.env
back\**\.env.development.local
back\**\.env.test.local
back\**\.env.production.local
back\**\.env.local

# parcel-bundler cache (https://parceljs.org/)
back\**\.cache
back\**\.parcel-cache

# Next.js build output
back\**\.next
back\**\out

# Nuxt.js build / generate output
back\**\.nuxt
back\**\dist

# Gatsby files
back\**\.cache
# Comment in the public line in if your project uses Gatsby and not Next.js
# https://nextjs.org/blog/next-9-1#public-directory-support
# public

# vuepress build output
back\**\.vuepress\dist

# vuepress v2.x temp and cache directory
back\**\.temp

# Docusaurus cache and generated files
back\**\.docusaurus

# Serverless directories
back\**\.serverless

# FuseBox cache
back\**\.fusebox

# DynamoDB Local files
back\**\.dynamodb

# TernJS port file
back\**\.tern-port

# Stores VSCode versions used for testing VSCode extensions
back\**\.vscode-test

# yarn v2
back\**\.yarn\cache
back\**\.yarn\unplugged
back\**\.yarn\build-state.yml
back\**\.yarn\install-state.gz
back\**\.pnp.*

### Node Patch ###
# Serverless Webpack directories
back\**\.webpack

# Optional stylelint cache

# SvelteKit build / generate output
back\**\.svelte-kit

# End of https://www.toptal.com/developers/gitignore/api/node

# Created by https://www.toptal.com/developers/gitignore/api/macos,python,visualstudiocode
# Edit at https://www.toptal.com/developers/gitignore?templates=macos,python,visualstudiocode

### macOS ###
# General
back\**\.DS_Store
back\**\.AppleDouble
back\**\.LSOverride

# Icon must end with two \r
back\**\Icon


# Thumbnails
back\**\._*

# Files that might appear in the root of a volume
back\**\.DocumentRevisions-V100
back\**\.fseventsd
back\**\.Spotlight-V100
back\**\.TemporaryItems
back\**\.Trashes
back\**\.VolumeIcon.icns
back\**\.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
back\**\.AppleDB
back\**\.AppleDesktop
back\**\Network Trash Folder
back\**\Temporary Items
back\**\.apdisk

### macOS Patch ###
# iCloud generated files
back\**\*.icloud

### Python ###
# Byte-compiled / optimized / DLL files
back\**\__pycache__
back\**\*.py[cod]
back\**\*$py.class

# C extensions
back\**\*.so

# Distribution / packaging
back\**\.Python
back\**\build
back\**\develop-eggs
back\**\dist
back\**\downloads
back\**\eggs
back\**\.eggs
back\**\lib
back\**\lib64
back\**\parts
back\**\sdist
back\**\var
back\**\wheels
back\**\share\python-wheels
back\**\*.egg-info
back\**\.installed.cfg
back\**\*.egg
back\**\MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
back\**\*.manifest
back\**\*.spec

# Installer logs
back\**\pip-log.txt
back\**\pip-delete-this-directory.txt

# Unit test / coverage reports
back\**\htmlcov
back\**\.tox
back\**\.nox
back\**\.coverage
back\**\.coverage.*
back\**\.cache
back\**\nosetests.xml
back\**\coverage.xml
back\**\*.cover
back\**\*.py,cover
back\**\.hypothesis
back\**\.pytest_cache
back\**\cover

# Translations
back\**\*.mo
back\**\*.pot

# Django stuff:
back\**\*.log
back\**\local_settings.py
back\**\db.sqlite3
back\**\db.sqlite3-journal

# Flask stuff:
back\**\instance
back\**\.webassets-cache

# Scrapy stuff:
back\**\.scrapy

# Sphinx documentation
back\**\docs\_build

# PyBuilder
back\**\.pybuilder
back\**\target

# Jupyter Notebook
back\**\.ipynb_checkpoints

# IPython
back\**\profile_default
back\**\ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
back\**\.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
back\**\__pypackages__

# Celery stuff
back\**\celerybeat-schedule
back\**\celerybeat.pid

# SageMath parsed files
back\**\*.sage.py

# Environments
back\**\.env
back\**\.venv
back\**\env
back\**\venv
back\**\ENV
back\**\env.bak
back\**\venv.bak

# Spyder project settings
back\**\.spyderproject
back\**\.spyproject

# Rope project settings
back\**\.ropeproject

# mkdocs documentation
back\site

# mypy
back\**\.mypy_cache
back\**\.dmypy.json
back\**\dmypy.json

# Pyre type checker
back\**\.pyre

# pytype static type analyzer
back\**\.pytype

# Cython debug symbols
back\**\cython_debug

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/

### Python Patch ###
# Poetry local configuration file - https://python-poetry.org/docs/configuration/#local-configuration
back\**\poetry.toml

# ruff
back\**\.ruff_cache

# LSP config files
back\**\pyrightconfig.json

### VisualStudioCode ###
back\**\.vscode\*
!back\**\.vscode\settings.json
!back\**\.vscode\tasks.json
!back\**\.vscode\launch.json
!back\**\.vscode\extensions.json
!back\**\.vscode\*.code-snippets

# Local History for Visual Studio Code
back\**\.history

# Built Visual Studio Code Extensions
back\**\*.vsix

### VisualStudioCode Patch ###
# Ignore all local history of files
back\**\.history
back\**\.ionide

# End of https://www.toptal.com/developers/gitignore/api/macos,python,visualstudiocode


# flyctl launch added from front\.gitignore
# Created by https://www.toptal.com/developers/gitignore/api/macos,linux,visualstudiocode,node
# Edit at https://www.toptal.com/developers/gitignore?templates=macos,linux,visualstudiocode,node

### Linux ###
front\**\*~

# temporary files which can be created if a process still has a handle open of a deleted file
front\**\.fuse_hidden*

# KDE directory preferences
front\**\.directory

# Linux trash folder which might appear on any partition or disk
front\**\.Trash-*

# .nfs files are created when an open file is removed but is still being accessed
front\**\.nfs*

### macOS ###
# General
front\**\.DS_Store
front\**\.AppleDouble
front\**\.LSOverride

# Icon must end with two \r
front\**\Icon

# Thumbnails
front\**\._*

# Files that might appear in the root of a volume
front\**\.DocumentRevisions-V100
front\**\.fseventsd
front\**\.Spotlight-V100
front\**\.TemporaryItems
front\**\.Trashes
front\**\.VolumeIcon.icns
front\**\.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
front\**\.AppleDB
front\**\.AppleDesktop
front\**\Network Trash Folder
front\**\Temporary Items
front\**\.apdisk

### macOS Patch ###
# iCloud generated files
front\**\*.icloud

### Node ###
# Logs
front\**\logs
front\**\*.log
front\**\npm-debug.log*
front\**\yarn-debug.log*
front\**\yarn-error.log*
front\**\lerna-debug.log*
front\**\.pnpm-debug.log*

# Diagnostic reports (https://nodejs.org/api/report.html)
front\**\report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# Runtime data
front\**\pids
front\**\*.pid
front\**\*.seed
front\**\*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
front\**\lib-cov

# Coverage directory used by tools like istanbul
front\**\coverage
front\**\*.lcov

# nyc test coverage
front\**\.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
front\**\.grunt

# Bower dependency directory (https://bower.io/)
front\**\bower_components

# node-waf configuration
front\**\.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
front\**\build\Release

# Dependency directories
front\**\node_modules
front\**\jspm_packages

# Snowpack dependency directory (https://snowpack.dev/)
front\**\web_modules

# TypeScript cache
front\**\*.tsbuildinfo

# Optional npm cache directory
front\**\.npm

# Optional eslint cache
front\**\.eslintcache

# Optional stylelint cache
front\**\.stylelintcache

# Microbundle cache
front\**\.rpt2_cache
front\**\.rts2_cache_cjs
front\**\.rts2_cache_es
front\**\.rts2_cache_umd

# Optional REPL history
front\**\.node_repl_history

# Output of 'npm pack'
front\**\*.tgz

# Yarn Integrity file
front\**\.yarn-integrity

# dotenv environment variable files
front\**\.env
front\**\.env.development.local
front\**\.env.test.local
front\**\.env.production.local
front\**\.env.local

# parcel-bundler cache (https://parceljs.org/)
front\**\.cache
front\**\.parcel-cache

# Next.js build output
front\**\.next
front\**\out

# Nuxt.js build / generate output
front\**\.nuxt
front\**\dist

# Gatsby files
front\**\.cache
# Comment in the public line in if your project uses Gatsby and not Next.js
# https://nextjs.org/blog/next-9-1#public-directory-support
# public

# vuepress build output
front\**\.vuepress\dist

# vuepress v2.x temp and cache directory
front\**\.temp

# Docusaurus cache and generated files
front\**\.docusaurus

# Serverless directories
front\**\.serverless

# FuseBox cache
front\**\.fusebox

# DynamoDB Local files
front\**\.dynamodb

# TernJS port file
front\**\.tern-port

# Stores VSCode versions used for testing VSCode extensions
front\**\.vscode-test

# yarn v2
front\**\.yarn\cache
front\**\.yarn\unplugged
front\**\.yarn\build-state.yml
front\**\.yarn\install-state.gz
front\**\.pnp.*

### Node Patch ###
# Serverless Webpack directories
front\**\.webpack

# Optional stylelint cache

# SvelteKit build / generate output
front\**\.svelte-kit

### VisualStudioCode ###
front\**\.vscode\*
!front\**\.vscode\settings.json
!front\**\.vscode\tasks.json
!front\**\.vscode\launch.json
!front\**\.vscode\extensions.json
!front\**\.vscode\*.code-snippets

# Local History for Visual Studio Code
front\**\.history

# Built Visual Studio Code Extensions
front\**\*.vsix

### VisualStudioCode Patch ###
# Ignore all local history of files
front\**\.history
front\**\.ionide

# End of https://www.toptal.com/developers/gitignore/api/macos,linux,visualstudiocode,node
fly.toml
